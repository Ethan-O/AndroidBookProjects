package com.badlogic.androidgames.framework.imp;

import java.util.ArrayList;
import java.util.List;

import android.view.MotionEvent;
import android.view.View;

import com.badlogic.androidgames.framework.Input.TouchEvent;
import com.badlogic.androidgames.framework.Pool;
import com.badlogic.androidgames.framework.Pool.PoolObjectFactory;

public class MultiTouchHandler {

	@ToargetApi(5)
	public class MultiTouchHandler implements TouchHandler {
		private static final int MAX_TOUCHPOINTS= 10;
		boolean[] isTouched= new boolean[MAX_TOUCHPOINTS];
		int[] touchX=new int[MAX_TOUCHPOINTS];
		int[] touchY= new int [MAX_TOUCHPOINTS];
		int [] id = new int [MAX_TOUCHPOINTS];
		Pool<TouchEvent>touchEventPool;
		List<TouchEvent> touchEvents = new ArrayList<TouchEvent>();
		List<TouchEvent> touchEventsBuffer = new ArrayList<TouchEvent>();
		float scaleX;
		float scaleY;
		
		public multiTouchHandler(View v, float scaleX, float scaleY){
			PoolObjectFactory<TouchEvent>factory = new PoolObjectFactory<TouchEvent>(){
				public TouchEvent createObject(){
					return new TouchEvent();
				}
			};
			touchEventPool=new Pool<TouchEvent>(factory,100);
			view.setOnTouchListener(this);
			
			this.scaleX=scaleX;
			this.scaleY=scaleY;
		}
		
		public boolean onTouch(View v, MotionEvent event){
			int action= event.getAction() & MotionEvent.ACTION_MASK;
			int pointerIndex=(event.getAction() & MotionEvent.ACTION_POINTER_ID_MASK)
					>>MotionEvent.ACTION_POINTER_ID_SHIFT;
			int pointerCount=event.getPointerCount();
			TouchEvent touchEvent;
			for(int i=0; i<MAX_TOUCHPOINTS; i++) {
				if(i>= pointerCount){
					isTouched[i]=false;
					id[i]=-1;
					continue;
				}
				int pointerId=event.getPointerId(i);
				if(event.getAction != MotionEvent.ACTION_MOVE && i != pointerIndex
				}
			}
			
		}
	}
}
